jobs:
  - job: ${{ parameters.target }}_${{ parameters.suffix }}
    displayName: "${{ parameters.target }} ${{ parameters.suffix }}"
    dependsOn: ${{ parameters.depends_on }}

    ${{ insert }}: ${{ parameters.env }}

    steps:
      - checkout: self
        clean: true
        fetchDepth: 10000

      - template: cmake.yml
        parameters:
          cmake_args: "${{ parameters.cmake_args }}"

      - template: ninja.yml
        parameters:
          cmake_args: "${{ parameters.cmake_args }}"

      - bash: 1>&2 echo "bogus reason"
        condition: ${{ eq(parameters.target, 'NoSGX') }}
        failOnStderr: true

      - template: test.yml
        parameters:
          ctest_filter: ${{ parameters.ctest_filter }}
          suite_name_suffix: "${{ parameters.target }} ${{ parameters.suffix }}"
          ctest_timeout: ${{ parameters.ctest_timeout }}

      - ${{ if eq(parameters.suffix, 'Instrumented') }}:
          - template: scan_build.yml

      - ${{ if eq(parameters.suffix, 'Perf') }}:
          - template: push_perf_data.yml
          - template: metrics.yml

      - ${{ if eq(parameters.suffix, 'Fuzz') }}:
          - template: publish_zap_report.yml

      - ${{ if eq(parameters.suffix, 'Release') }}:
          - template: publish_tls_report.yml
          - template: install.yml

      - bash: |
          echo "Cancelling pipeline run..."
          URL="${SYSTEM_TEAMFOUNDATIONCOLLECTIONURI}${SYSTEM_TEAMPROJECTID}/_apis/build/builds/${BUILD_BUILDID}?api-version=2.0"
          curl -X "PATCH" "$URL" -H "Authorization: Bearer ${SYSTEM_ACCESSTOKEN}" -H 'Content-Type: application/json' \
              -d $'{"status":"cancelling"}'
          curl -X "PATCH" "$URL" -H "Authorization: Bearer ${SYSTEM_ACCESSTOKEN}" -H 'Content-Type: application/json' \
              -d $'{"status":"completed"}'
          curl -X "PATCH" "$URL" -H "Authorization: Bearer ${SYSTEM_ACCESSTOKEN}" -H 'Content-Type: application/json' \
              -d $'{"result":"failed"}'
        displayName: On failure, kill other jobs
        condition: failed()
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)
